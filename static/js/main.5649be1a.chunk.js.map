{"version":3,"sources":["mp3/static.mp3","mp3/music.mp3","mp3/podcast.mp3","mp3/documentary.mp3","App.js","index.js"],"names":["App","props","state","percentage","setPercentage","bind","className","this","changeState","newPercentage","setState","React","Component","Dial","angle","id","style","transform","document","getElementById","addEventListener","window","e","newAngle","deltaY","Math","abs","trunc","Bar","newLeft","left","loop","src","music","staticSound","podcast","documentary","initializeAudio","lastVolume","volume","currentTime","play","console","log","staticVolume","pause","removeAttribute","setAttribute","AudioPopup","outerHTML","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5649be1a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/static.36cd3fb8.mp3\";","export default __webpack_public_path__ + \"static/media/music.6e332da9.mp3\";","export default __webpack_public_path__ + \"static/media/podcast.1f55bee3.mp3\";","export default __webpack_public_path__ + \"static/media/documentary.6a9092cb.mp3\";","import React from 'react';\nimport staticSound from './mp3/static.mp3';\nimport music from './mp3/music.mp3';\nimport podcast from './mp3/podcast.mp3';\nimport documentary from './mp3/documentary.mp3';\nimport './App.css';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {percentage: 1};\n    this.setPercentage = this.setPercentage.bind(this)\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Fake Fake News</h1>\n        <AudioPopup></AudioPopup>\n        <Bar percentage={this.state.percentage} />\n        <Dial changeState={this.setPercentage} />\n      </div>\n    );\n  }\n\n  setPercentage(newPercentage) {\n    this.setState({\n      percentage: newPercentage\n    });\n  }\n  \n}\n\nclass Dial extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {angle: 2.7};\n  }\n  \n  render() {\n    return(\n      <div id=\"radio-dial\" style={{transform: `rotate(${this.state.angle - 45}deg)`}}>\n        <div id=\"radio-dial-tab\"></div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    document.getElementById('popup').addEventListener('click', () => {\n      window.addEventListener('wheel', (e) => {\n        let newAngle = this.state.angle + e.deltaY / Math.abs(e.deltaY) * 2.7;\n        if (newAngle > 0 && newAngle < 270) {\n          this.setState({angle: newAngle});\n  \n          let newPercentage = Math.trunc(newAngle / 270 * 100);\n          this.props.changeState(newPercentage);\n        }\n      });\n    });\n  }\n\n}\n\nclass Bar extends React.Component {\n  \n  render() {\n    let newLeft = this.props.percentage + '%';\n    return(\n      <div id=\"radio-bar\">\n        <div id=\"radio-bar-tab\" style={{left: newLeft}}></div>\n        <audio loop id=\"music\" src={music}></audio>\n          <audio loop id=\"staticsound\" src={staticSound}></audio>\n          <audio loop id=\"podcast\" src={podcast}></audio>\n          <audio loop id=\"documentary\" src={documentary}></audio>\n        <div className=\"radio-bar-stop\" id=\"radio-bar-stop-1\"></div>\n        <div className=\"radio-bar-stop\" id=\"radio-bar-stop-2\"></div>\n        <div className=\"radio-bar-stop\" id=\"radio-bar-stop-3\"></div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    document.getElementById('popup').addEventListener('click', () => {\n      this.initializeAudio();\n    });\n    this.lastVolume = 1;\n  }\n\n  initializeAudio() {\n    document.getElementById('music').volume = .1;\n    document.getElementById('documentary').currentTime = 30;\n    document.getElementById('staticsound').currentTime = 10;\n    document.getElementById('staticsound').volume = 1;\n    document.getElementById('staticsound').play();\n    document.getElementById('podcast').addEventListener('volumechange', (e) => {\n      let volume = document.getElementById('podcast').volume;\n      if ((volume === this.lastVolume) && (this.lastVolume !== 0)) {\n        volume = 0;\n      }\n      console.log(volume)\n      document.getElementById('music').volume = volume / 10;\n      if (this.staticVolume != 0) {\n        document.getElementById('staticsound').volume = volume;\n      }\n      document.getElementById('documentary').volume = volume;\n      this.lastVolume = volume;\n    });\n  }\n\n  componentDidUpdate() {\n\n    if (this.props.percentage > 20 && this.props.percentage < 30) {\n      this.staticVolume = Math.abs(25 - this.props.percentage);\n      document.getElementById('music').play();\n      document.getElementById('podcast').pause();\n      document.getElementById('documentary').pause();\n      document.getElementById('podcast').removeAttribute('controls');\n    } else if (this.props.percentage > 45 && this.props.percentage < 55) {\n      this.staticVolume = Math.abs(50 - this.props.percentage);\n      document.getElementById('music').pause();\n      document.getElementById('podcast').play();\n      document.getElementById('documentary').pause();\n      document.getElementById('podcast').setAttribute('controls', 'true');\n    } else if (this.props.percentage > 70 && this.props.percentage < 80) {\n      this.staticVolume = Math.abs(75 - this.props.percentage);\n      document.getElementById('music').pause();\n      document.getElementById('podcast').pause();\n      document.getElementById('documentary').play();\n      document.getElementById('podcast').removeAttribute('controls');\n    } else {\n      document.getElementById('music').pause();\n      document.getElementById('podcast').pause();\n      document.getElementById('documentary').pause();\n      document.getElementById('podcast').removeAttribute('controls');\n    }\n\n    if (this.staticVolume !== 0 && this.staticVolume < 5) {\n      document.getElementById('staticsound').volume = document.getElementById('podcast').volume - (document.getElementById('podcast').volume / this.staticVolume);\n    } else if (this.staticVolume === 0) {\n      document.getElementById('staticsound').volume = 0;\n    } else {\n      document.getElementById('staticsound').volume = document.getElementById('podcast').volume;\n    }\n\n  }\n\n}\n\nclass AudioPopup extends React.Component {\n\n  render() {\n    return (\n      <div id=\"popup\">\n        <div id=\"popup-background\"></div>\n        <div id=\"popup-message\">\n          <p>\n          Questo sito Ã¨ una ricostruzione digitale di una radio analogica.<br/>\n          Ogni barretta nella icona delle frequenze contiene un canale diverso. Ogni canale inizia non appena selezionato.<br/>\n          Portare la lancetta sul primo per il canale musicale.<br/>\n          Portare la lancetta sul secondo per il canale contenente il podcast.<br/>\n          Portare la lancetta sul terzo per il canale delle notizie.<br/>\n          Per spostare la si puÃ² utilizzare la rotellina del mouse oppure il touchpad con entrambe le dita.<br/>\n          Sotto la barra delle frequenze troverete i comandi per il podcast, sarÃ  possibile riavvolgere ed aumentare/diminuire il volume.<br/>\n          </p>\n          <p>\n          Fare click su questa finestra la chiuderÃ  e darÃ  accesso al sito,<br/>\n          Buon ascolto.<br/>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    document.getElementById('popup').addEventListener('click', () => {\n      document.getElementById('popup').outerHTML = '';\n    });\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}